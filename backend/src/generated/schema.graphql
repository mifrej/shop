### This file was autogenerated by Nexus 0.10.0
### Do not make changes to this file directly


type CartItem {
  id: ID!
  item: Item
  quantity: Int!
  user: User!
}

enum CartItemOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  quantity_ASC
  quantity_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CartItemWhereInput {
  AND: [CartItemWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  item: ItemWhereInput
  NOT: [CartItemWhereInput!]
  OR: [CartItemWhereInput!]
  quantity: Int
  quantity_gt: Int
  quantity_gte: Int
  quantity_in: [Int!]
  quantity_lt: Int
  quantity_lte: Int
  quantity_not: Int
  quantity_not_in: [Int!]
  user: UserWhereInput
}

input CartItemWhereUniqueInput {
  id: ID
}

type Item {
  description: String!
  id: ID!
  image: String
  largeImage: String
  price: Int!
  title: String!
  user: User!
}

input ItemCreateInput {
  description: String!
  image: String
  largeImage: String
  price: Int!
  title: String!
  user: UserCreateOneInput!
}

enum ItemOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  price_ASC
  price_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ItemWhereInput {
  AND: [ItemWhereInput!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  image: String
  image_contains: String
  image_ends_with: String
  image_gt: String
  image_gte: String
  image_in: [String!]
  image_lt: String
  image_lte: String
  image_not: String
  image_not_contains: String
  image_not_ends_with: String
  image_not_in: [String!]
  image_not_starts_with: String
  image_starts_with: String
  largeImage: String
  largeImage_contains: String
  largeImage_ends_with: String
  largeImage_gt: String
  largeImage_gte: String
  largeImage_in: [String!]
  largeImage_lt: String
  largeImage_lte: String
  largeImage_not: String
  largeImage_not_contains: String
  largeImage_not_ends_with: String
  largeImage_not_in: [String!]
  largeImage_not_starts_with: String
  largeImage_starts_with: String
  NOT: [ItemWhereInput!]
  OR: [ItemWhereInput!]
  price: Int
  price_gt: Int
  price_gte: Int
  price_in: [Int!]
  price_lt: Int
  price_lte: Int
  price_not: Int
  price_not_in: [Int!]
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
  user: UserWhereInput
}

input ItemWhereUniqueInput {
  id: ID
}

type Mutation {
  createItem(data: ItemCreateInput!): Item!
  createUser(data: UserCreateInput!): User!
  deleteItem(where: ItemWhereUniqueInput!): Item
  deleteUser(where: UserWhereUniqueInput!): User
}

enum Permission {
  ADMIN
  USER
}

type Query {
  cartItem(where: CartItemWhereUniqueInput!): CartItem
  cartItems(after: String, before: String, first: Int, last: Int, orderBy: CartItemOrderByInput, skip: Int, where: CartItemWhereInput): [CartItem!]!
  item(where: ItemWhereUniqueInput!): Item
  items(after: String, before: String, first: Int, last: Int, orderBy: ItemOrderByInput, skip: Int, where: ItemWhereInput): [Item!]!
  user(where: UserWhereUniqueInput!): User
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
}

type User {
  email: String!
  id: ID!
  name: String!
  password: String!
  permissions: [Permission!]!
}

input UserCreateInput {
  email: String!
  name: String!
  password: String!
  permissions: UserCreatepermissionsInput
}

input UserCreateOneInput {
  connect: UserWhereUniqueInput
  create: UserCreateInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  password_ASC
  password_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserWhereInput {
  AND: [UserWhereInput!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
}

input UserWhereUniqueInput {
  email: String
  id: ID
}
